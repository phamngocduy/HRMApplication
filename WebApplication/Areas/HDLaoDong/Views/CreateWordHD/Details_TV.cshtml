@using System.Data
@model HRM.Databases_HDLaoDong.Models.hdChiTietHDLD
@using HRM.Databases.Models
@using HRM.Databases_HDLaoDong.Models
@using HRM.Webpages.Helpers
@{
    ViewBag.Title = "Details";
    var db = new HRMDB2Entities();
    var db0 = new HRM.Databases.Models.HRMDB0Entities();

    // in hd
    var cauHinh = db.hdCauHinh.FirstOrDefault();
    string TruongDH = cauHinh.Coquan;
    string SoHD = Model.SoHD;
    string LoaiHD = Model.LoaiHD;
    string ThoiHanHD = "";
    int ThoiHanHD_id = Model.ThoihanHD_id;
    ThoiHanHD = Model.ThoiHanHD;//db.dmThoiHanHD.Where(th => th.id == ThoiHanHD_id).FirstOrDefault().tenThoiHanHD;
    string nsdldOng_Ba = "Bà";
    int? nsdldGT_id = cauHinh.Gioitinh_id;
    string nsdlenGioiTinh = db0.dmGioiTinh.Where(gt => gt.id == nsdldGT_id).FirstOrDefault().tenGioiTinh;
    if (nsdlenGioiTinh == "Nam")
    {
        nsdldOng_Ba = "Ông";
    }
    string nsdldHoTen = cauHinh.HotenNSDLD;
    int QG_id = cauHinh.Quoctich_id;
    string nsdldQuocTich = db0.dmQuocGia.Where(qg => qg.id == QG_id).FirstOrDefault().tenQuocGia;
    int CV_id = cauHinh.Chucvu_id;
    string ChucVu = "";
    try
    {
        ChucVu = db0.dmChucVu.Where(cv => cv.id == CV_id).FirstOrDefault().tenChucVu;
    }
    catch
    {
    }
    string DiaChi = cauHinh.Diachi;
    string DienThoai = cauHinh.SDT;
    string nldOng_Ba = "Bà";
    int? nldGT_id = Model.Gioitinh_id;
    string nldtenGioiTinh = db0.dmGioiTinh.Where(gt => gt.id == nldGT_id).FirstOrDefault().tenGioiTinh;
    if (nldtenGioiTinh == "Nam")
    {
        nldOng_Ba = "Ông";
    }
    string nldHoTen = Model.HotenNLD;
    string nldNgaySinh = "";
    try
    {
        nldNgaySinh = Model.Ngaysinh.Value.ToShortDateString();
    }
    catch
    {
    }
    string nldNoiSinh = Model.Noisinh;
    int? NgheNghiep_id = Model.Nghenghiep_id;
    string nldNgheNghiep = "";
    try
    {
        nldNgheNghiep = Model.NgheNghiep;//db0.dmNgheNghiep.Where(nn => nn.id == NgheNghiep_id).FirstOrDefault().tenNgheNghiep;
    }
    catch { }
    string nldDiaChiThuongTru = Model.Diachithuongtru;
    string nldSoCMND = Model.soCMND;
    string nldcmndNoiCap = "";
    int? cmndNoiCap_id = Model.cmndNoicap;
    try
    {
        nldcmndNoiCap = db0.dmTinhThanh.Where(tt => tt.id == cmndNoiCap_id).FirstOrDefault().tenTinhThanh;
    }
    catch { }
    string nldcmncNgayCap = "";
    try
    {
        nldcmncNgayCap = Model.cmndNgaycap.Value.ToShortDateString();
    }
    catch { }
    string nldQuocTich = "Việt Nam";
    int? DV_id = Model.Donvi_id;
    string DonVi = Model.DonVi;//db0.dmDonVi.Where(dv => dv.id == DV_id).FirstOrDefault().tenDonVi;
    int? CDCM_id = Model.Chucdanh_id;
    string ChucDanhCM = Model.ChucDanh;//db0.dmChucDanhChuyenMon.Where(cd => cd.id == CDCM_id).FirstOrDefault().tenChucDanhChuyenMon;
    int TGLV_id = Model.ThoigioLV_id;
    string ThoiGioLamViec = Model.ThoiGioLV;//db.dmThoiGioLamViec.Where(tg => tg.id == TGLV_id).FirstOrDefault().tenThoiGioLamViec;
    string MucLuong = Model.Mucluongchinh;
    string DiaDiemLamViec = cauHinh.DiadiemLV;
    int tuNgay = Model.NgayHL.Day;
    int tuThang = Model.NgayHL.Month;
    int tuNam = Model.NgayHL.Year;
    int? denNgay = null;
    try
    {
        denNgay = Model.NgayhetHL.Value.Day;
    }
    catch
    {

    }
    int? denThang = null;
    try
    {
        denThang = Model.NgayhetHL.Value.Month;
    }
    catch
    {
    }
    int? denNam = null;
    try
    {
        denNam = Model.NgayhetHL.Value.Year;
    }
    catch
    {
    }
    string nldChucVu = "";
    int? nldCV_id = Model.Chucvu_id;
    try
    {
        nldChucVu = Model.ChucVu;//db0.dmChucVu.Where(dv => dv.id == nldCV_id).FirstOrDefault().tenChucVu;
    }
    catch
    {
    }
    double? HeSo = null;
    var Bac = "";
    var Ngach = "";
    var Nhom = "";
    var MaNhom = "";
    var BangLuong = Model.Bangluong_id;

    int? HSLuong_id = Model.HSLuong_id;
    int? Ngach_id = Model.Ngach_id;
    int? Nhom_id = Model.Nhom_id;
    try
    {
        HeSo = Model.HSLuong;//db0.dmBangLuong.Where(bl => bl.id == HSLuong_id).FirstOrDefault().hesoLuong;
    }
    catch
    {
    }
    try
    {
        Bac = Model.Bac;//db0.dmBangLuong.Where(bl => bl.id == HSLuong_id).FirstOrDefault().bacLuong;
    }
    catch
    {
    }
    try
    {
        Ngach = Model.Ngach;//db0.dmNgachVienChuc.Where(bl => bl.id == Ngach_id).FirstOrDefault().tenNgachVienChuc;
    }
    catch
    {
    }
    try
    {
        Nhom = Model.Nhom;//db0.dmNhomNgachVienChuc.Where(bl => bl.id == Nhom_id).FirstOrDefault().tenNhomNgachVienChuc;
        MaNhom = Model.MaNhom;//db0.dmNhomNgachVienChuc.Where(bl => bl.id == Nhom_id).FirstOrDefault().maNhomNgachVienChuc;
    }
    catch
    {
    }
}

<span style="float:right">Nhấn nút Save để lưu thay đổi!</span>
<p>@Html.ActionLink("Quay lại", Request.QueryString["Back"], "ThemMoiHD", new { id = Model.id }, null)</p>
@{
    var Replace = new Func<string, string, string, string>((s, o, n) =>
    {
        return s.Replace(o, n);
    });
    var banHopDong = Model.mauHopDong;
    banHopDong = Replace(banHopDong, "{TruongDH}", TruongDH);
    banHopDong = Replace(banHopDong, "{SoHD}", SoHD);
    banHopDong = Replace(banHopDong, "{nsdldOng_Ba}", nsdldOng_Ba);
    banHopDong = Replace(banHopDong, "{nsdldHoTen}", nsdldHoTen);
    banHopDong = Replace(banHopDong, "{nsdldQuocTich}", nsdldQuocTich);
    banHopDong = Replace(banHopDong, "{nsdldChucVu}", ChucVu);
    banHopDong = Replace(banHopDong, "{DiaChi}", DiaChi);
    banHopDong = Replace(banHopDong, "{DienThoai}", DienThoai);
    banHopDong = Replace(banHopDong, "{nldOng_Ba}", nldOng_Ba);
    banHopDong = Replace(banHopDong, "{nldHoTen}", nldHoTen);
    banHopDong = Replace(banHopDong, "{nldQuocTich}", nldQuocTich);
    banHopDong = Replace(banHopDong, "{nldNgaySinh}", nldNgaySinh);
    banHopDong = Replace(banHopDong, "{nldNoiSinh}", nldNoiSinh);
    banHopDong = Replace(banHopDong, "{nldNgheNghiep}", nldNgheNghiep);
    banHopDong = Replace(banHopDong, "{nldDiaChiThuongTru}", nldDiaChiThuongTru);
    banHopDong = Replace(banHopDong, "{nldSoCMND}", nldSoCMND);
    banHopDong = Replace(banHopDong, "{nldcmndNgayCap}", nldcmncNgayCap);
    banHopDong = Replace(banHopDong, "{nldcmndNoiCap}", nldcmndNoiCap);
    banHopDong = Replace(banHopDong, "{LoaiHD}", LoaiHD);
    banHopDong = Replace(banHopDong, "{ThoiHanHD}", ThoiHanHD);
    banHopDong = Replace(banHopDong, "{NgayHieuLuc}", String.Format("ngày {0} tháng {1} năm {2}", Model.NgayHL.Day, Model.NgayHL.Month, Model.NgayHL.Year));
    banHopDong = Replace(banHopDong, "{NgayHL}", Model.NgayHL.ToShortDateString());
    banHopDong = Replace(banHopDong, "{NgayHetHieuLuc}", Model.NgayhetHL.HasValue ? String.Format("ngày {0} tháng {1} năm {2}", Model.NgayhetHL.Value.Day, Model.NgayhetHL.Value.Month, Model.NgayhetHL.Value.Year) : null);
    banHopDong = Replace(banHopDong, "{NgayHetHL}", Model.NgayhetHL.HasValue ? Model.NgayhetHL.Value.ToShortDateString() : null);
    banHopDong = Replace(banHopDong, "{DonVi}", DonVi);
    banHopDong = Replace(banHopDong, "{ChucDanhCM}", ChucDanhCM);
    banHopDong = Replace(banHopDong, "{ChucVu}", nldChucVu);
    banHopDong = Replace(banHopDong, "{ThoiGioLamViec}", ThoiGioLamViec);
    banHopDong = Replace(banHopDong, "{TyLeLuong}", Model.Tyleluong.ToString());
    banHopDong = Replace(banHopDong, "{MucLuong}", MucLuong);
    banHopDong = Replace(banHopDong, "{BangLuong}", BangLuong);
    banHopDong = Replace(banHopDong, "{Nhom}", Nhom);
    banHopDong = Replace(banHopDong, "{Bac}", Bac);
    banHopDong = Replace(banHopDong, "{HeSo}", HeSo.ToString());
    banHopDong = Replace(banHopDong, "{Today}", String.Format("ngày {0} tháng {1} năm {2}", DateTime.Today.Day, DateTime.Today.Month, DateTime.Today.Year));
    banHopDong = Replace(banHopDong, "{Now}", String.Format("{0}/{1}/{2}", DateTime.Now.Day, DateTime.Now.Month, DateTime.Now.Year));
    Model.banHopDong = banHopDong;
    if (String.IsNullOrEmpty(Model.banHopDong))
    {
        var model = db.hdChiTietHDLD.Find(Model.id);
        model.banHopDong = banHopDong;
        db.Entry(model).State = EntityState.Modified;
        db.SaveChanges();
    }
}

@using (Html.BeginForm("View_BanHopDong", "ThemMoiHD"))
{
    @Html.HiddenFor(model => model.id)
    @Html.TextAreaFor(model => model.banHopDong)
}

<script src="~/Scripts/ckeditor/ckeditor.js" type="text/javascript"></script>
<script src="~/Scripts/ckeditor/adapters/jquery.js" type="text/javascript"></script>
<script>
    $(document).ready(function () {
        $('textarea#banHopDong').ckeditor();
    });
</script>