@using HRM.Webpages.Helpers
@model HRM.QLBHXH.Models.nvbhDanhSachDieuChinhTangGiam
@{
    ViewBag.Title = "Create";
    ViewBag.TyLeDong = ViewBag.TyLeDong;

    DateTime ngayht = ViewBag.ngayht;
}
@*<h2>Create</h2>*@


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>nvbhDanhSachDieuChinhTangGiam</legend>
         @*<input id="Manvbh" disabled="disabled" />*@
        <span>
        1) Loại điều chỉnh(<font color="red"><b>*</b></font>):
        @Html.DropDownList("idLoaiDieuChinh", String.Empty)
        @Html.ValidationMessageFor(model => model.idLoaiDieuChinh)
    <span id="clickme">
      <font color="red"><b>Loại:(*)</b></font>
        @Html.DropDownList("idLoaiTangGiam", String.Empty)
        @Html.ValidationMessageFor(model => model.idLoaiTangGiam)
        </span>
         2) Ngày phát sinh(<font color="red"><b>*</b></font>):
        @Html.TextBoxFor(model => model.NgayPhatSinh, new { @Value = ngayht.ToShortDateString() })
        @Html.ValidationMessageFor(model => model.NgayPhatSinh)
        </span>
        <br />  
             @Html.HiddenFor(model => model.idnvbhNhanVienBHXH, new { @Value = 1 })
        <span>            
              3) Họ và tên(<font color="red"><b>*</b></font>):
        @Html.DropDownList("list", String.Empty)
        @Html.HiddenFor(model => model.NV_id)

        @Html.ValidationMessageFor(model => model.NV_id)
  4) Cấp bậc/ Chức vụ(<font color="red"><b>*</b></font>):
        @Html.EditorFor(model => model.ChucVuCongViec)
        @Html.ValidationMessageFor(model => model.ChucVuCongViec)
        </span>
        <br /> 
          <b> 5) Mức đóng cũ</b>
        <br />

        <span>            
      5.1) Tiền lương:
        @Html.HiddenFor(model => model.TienLuongMDC)
        @Html.ValidationMessageFor(model => model.TienLuongMDC)
        <input id="Tien1" />
        </span>
        <br /> 

        <span>            
     5.2) Phụ cấp chức vụ: 
        @Html.EditorFor(model => model.PCChucVuMDC)
        @Html.ValidationMessageFor(model => model.PCChucVuMDC)
        
  5.3) Phụ cấp thâm niên vượt khung(%):
        @Html.EditorFor(model => model.PCThamNienVuotKhungMDC)
        @Html.ValidationMessageFor(model => model.PCThamNienVuotKhungMDC)
        </span>
        <br /> 

        <span>            
      5.4) Phụ cấp thâm niên nghề(%):
        @Html.EditorFor(model => model.PCThamNienNgheMDC)
        @Html.ValidationMessageFor(model => model.PCThamNienNgheMDC)

       5.5) Phụ cấp Khác:
        @Html.EditorFor(model => model.PCKhacMDC)
        @Html.ValidationMessageFor(model => model.PCKhacMDC)
        </span>
        <br /> 

            <b>6) Mức đóng mới</b>
        <br />

        <span>            
          6.1) Tiền lương: 
        @Html.HiddenFor(model => model.TienLuongMDM)
        @Html.ValidationMessageFor(model => model.TienLuongMDM)
        <input id="Tien2" />
        </span>
        <br /> 

        <span>            
        6.2) Phụ cấp chức vụ: 
        @Html.EditorFor(model => model.PCChucVuMDM)
        @Html.ValidationMessageFor(model => model.PCChucVuMDM)

       6.3) Phụ cấp thâm niên vượt khung(%): 
        @Html.EditorFor(model => model.PCThamNienVuotKhungMDM)
        @Html.ValidationMessageFor(model => model.PCThamNienVuotKhungMDM)
        </span>
        <br /> 

        <span>            
       6.4) Phụ cấp thâm niên nghề(%):
        @Html.EditorFor(model => model.PCThamNienNgheMDM)
        @Html.ValidationMessageFor(model => model.PCThamNienNgheMDM)

       
       6.5) Phụ cấp Khác: 
        @Html.EditorFor(model => model.PCKhacMDM)
        @Html.ValidationMessageFor(model => model.PCKhacMDM)
        </span>
        <br /> 
        <span>            
    7) Từ tháng năm(<font color="red"><b>*</b></font>):
        @Html.EditorFor(model => model.TuThangNam)
        @Html.ValidationMessageFor(model => model.TuThangNam)

       8) Đến tháng năm: 
        @Html.EditorFor(model => model.DenThangNam)
        @Html.ValidationMessageFor(model => model.DenThangNam)
        </span>
        <br /> 

        <span>            
     9) Tỷ lệ đóng(%):
        @Html.DropDownList("TyLeDong", String.Empty)
        @*@Html.EditorFor(model => model.TyLeDong)*@
        @Html.ValidationMessageFor(model => model.TyLeDong)
            
        @Html.VN("Không trả thẻ: ")
        @Html.EditorFor(model => model.KhongTraThe)
        @Html.ValidationMessageFor(model => model.KhongTraThe)
        </span>
        <br /> 

        <span>            
        @Html.VN("Ghi chú: ")
        @Html.EditorFor(model => model.GhiChu)
        @Html.ValidationMessageFor(model => model.GhiChu)
        </span>
        <br /> 

        <font color="red"><b>(*)Không được để trống</b></font>
         @Html.HiddenFor(model => model.idLoaiTangGiam, new { @id = "loaiTG" })
        <p>
            <input type="submit" value="Thêm"  onclick="return check();" />
        </p>
    </fieldset>
}


<Script>
//    $('#idLoaiTangGiam').hide();
    var dc = $("[id$=idLoaiDieuChinh]").combobox();
    var tg = $("[id$=idLoaiTangGiam").combobox();


        $("#clickme").hide();
        dc.change(function () {
            if ($(this).val() == 1 || $(this).val() == 2) {
                $("#clickme").show();

                tg.trigger("connect", "~/QLBHXH/DanhSachDieuChinhTangGiam/TG?id=" + $(this).val());
            } else { $("#clickme").hide(); }
        });

    
    
    
    
    //thong bao loi neu cac truong bi nill
    function check() {


        if (document.getElementById('idLoaiDieuChinh').value == "") {
            alert("Loại điều chỉnh không được bỏ trống!");

            return false;
        }
        if (document.getElementById('NgayPhatSinh').value == "") {
            alert("Ngày phát sinh không được bỏ trống!");

            return false;
        }
        if (document.getElementById('list').value == "") {
            alert("Họ và tên không được bỏ trống!");

            return false;
        }

        if (document.getElementById('TuThangNam').value == "") {
            alert("Từ tháng năm không được bỏ trống!");

            return false;
        }


    }





//    $("#idLoaiDieuChinh").combobox();
//    $("#idLoaiTangGiam").combobox();
    $("#TyLeDong").combobox();
    
   var nvbh= $("#list").combobox();

//    var nvbhxh = $("[id$=idnvbhNhanVienBHXH").combobox();



    $("#NgayPhatSinh").datepicker({
        changeDay: true,
        changeMonth: true,
        changeYear: true
    });
    $("#TuThangNam").datepicker({
        changeDay: true,
        changeMonth: true,
        changeYear: true
    });
    $("#DenThangNam").datepicker({
        changeDay: true,
        changeMonth: true,
        changeYear: true
    });




    $(".custom-combobox-input").removeClass("ui-state-default");
    $(".custom-combobox-input").removeClass("ui-widget-content");
    $(".custom-combobox-input").removeClass("ui-corner-left");
    $(".custom-combobox-toggle").removeClass("ui-state-default");
    $(".custom-combobox-input").css("border", "0").css("border-bottom", "1px dotted");
    $(".custom-combobox-input").css("background-color", "transparent").css("margin", "5px 0 6px 0");

    // Remove bg
//    $("input[type=text],input[type=datetime],input[type=number]").css("background-color", "transparent");
//    $("input[type=text],input[type=datetime],input[type=number]").css("border", "0").css("border-bottom", "1px dotted");
    $("#Tien1").css("border", "0").css("border-bottom", "1px dotted").css("background-color", "transparent");
    $("#Tien2").css("border", "0").css("border-bottom", "1px dotted").css("background-color", "transparent");

    // remove corner 
//    $(".custom-combobox-input").removeClass("ui-state-default");
//    $(".custom-combobox-input").removeClass("ui-widget-content");
//    $(".custom-combobox-input").removeClass("ui-corner-left");
//    $(".custom-combobox-toggle").removeClass("ui-state-default");
    // set auto size

    $(".custom-combobox-input").on("input", function () {
        $(this).attr("size", $(this).val().length + 4);
    });
    setInterval(function () {
        $(".custom-combobox-input").each(function () {
            $(this).attr("size", $(this).val().length + 4);
        });
    }, 1000);
    $("input[type=text]").on("input", function () {
        $(this).attr("size", $(this).val().length + 1);
    }).each(function () {
        $(this).attr("size", $(this).val().length + 1);
    });


    $("input[type=datetime]").css("width", "90px");

    // set size for tex editor
    
    $("#PCChucVuMDC").css("width", "100");
    $("#PCThamNienVuotKhungMDC").css("width", "100");
    $("#PCThamNienNgheMDC").css("width", "100");
    $("#PCKhacMDC").css("width", "100");

    $("#PCChucVuMDM").css("width", "100");
    $("#PCThamNienVuotKhungMDM").css("width", "100");
    $("#PCThamNienNgheMDM").css("width", "100");
    $("#PCKhacMDM").css("width", "100");
    $("#ChucVuCongViec").css("width", "200");

    $(".custom-combobox-input").css("background-color", "transparent").css("margin", "5px 0 6px 0");
    $("input[type=text],input[type=datetime],input[type=number],.custom-combobox-input").css("border", "0").css("border-bottom", "1px dotted");
    //

    //-------------------------------------Tien 1----------------------------------------------   
    $('#Tien1').keyup(function (event) {

        // skip for arrow keys
        if (event.which >= 37 && event.which <= 40) {
            event.preventDefault();
        }

        $(this).val(function (index, value) {
            return value.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        });
    });

    $("#Tien1").keyup(function () {
    
        //Clear the hidden field
        $("#TienLuongMDC").val("");

        //Create char array from phone number field
        var charArray = $(this).val().split("");

        var phoneNumber = "";

        //Iterate over each character in the char array
        //and determine if it is a number
        $.each(charArray, function (index, value) {
            if (!isNaN(value) && value != " ") {
                phoneNumber = phoneNumber + value;
            }
        });
        //Set hidden field
        $("#TienLuongMDC").val(phoneNumber);
    });



    //----------------------------- Tien 2 ------------------------------------------------------------- 
    $('#Tien2').keyup(function (event) {

        // skip for arrow keys
        if (event.which >= 37 && event.which <= 40) {
            event.preventDefault();
        }

        $(this).val(function (index, value) {
            return value.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        });
    });
    $("#Tien2").keyup(function () {

        //Clear the hidden field
        $("#TienLuongMDM").val("");

        //Create char array from phone number field
        var charArray = $(this).val().split("");

        var phoneNumber = "";

        //Iterate over each character in the char array
        //and determine if it is a number
        $.each(charArray, function (index, value) {
            if (!isNaN(value) && value != " ") {
                phoneNumber = phoneNumber + value;
            }
        });
        //Set hidden field
        $("#TienLuongMDM").val(phoneNumber);
    });

    // Lấy chức vụ sau khi chọn Nhân viên đưa vào combobox
    nvbh.change(function () {


        var stringValue = $(this).val();
        var list = stringValue.split('-');


//        var text = $(this).val();
        $("[id$=NV_id]").val(list[0]);
        $("[id$=ChucVuCongViec]").val(list[1]);

    });



   

</Script>

<style>
    form { width: auto }
    input { width: auto; font-weight: bold }
    span { display: inline-block; white-space: nowrap }
    label { display: inline; color: gray; font-size: 1.1em }
</style>