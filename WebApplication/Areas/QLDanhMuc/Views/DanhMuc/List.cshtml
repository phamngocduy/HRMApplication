@model IEnumerable<string>
@using HRM.Webpages.Helpers

@{
    ViewBag.Title = "Quản lý danh mục";
}
@helper link4DanhMuc(string name, bool isdef = true)
    {
    <a name="@name" href="@String.Format(isdef ? "DanhMuc/Index/{0}" : "/QLDanhMuc/{0}/Index", name)">@Html.VN(name)</a>
}

<table>
<tr valign="top">
<td style="padding:0">
<div id="accordionResizer" class="list">
    <table id="listDanhMuc">
        <thead>
            <tr><td>Quản lý danh mục</td></tr>
        </thead>
        <tbody>
        @foreach (var danhmuc in Model)
        {
            <tr><td>@link4DanhMuc(danhmuc.Substring(2, danhmuc.Length-2))</td></tr>
        }
        <tr><td>
            <a name="TaiNguyen" href="TaiNguyen/Index" target="_blank">Thư mục/Tập tin</a>
        </td></tr>
        </tbody>
    </table>
</div>
</td>
<td width="100%" style="padding:0">
<div id = "dialog"></div>
<div id="tabs">
    <ul></ul>
</div>
</td>
</tr>
</table>

@section Scripts {
<style>
th { font-size: 1.1em; }
label { font-size: 1.1em; }
#dialog label { margin-top: 0.5em; }
#dialog label, #dialog input { display: block; }
#dialog input, #dialog textarea { width: 95%; }
#tabs li .ui-icon-close { float: right; margin: 0; cursor: pointer; }
#tabs li .ui-icon-refresh { float: right; margin: 0; cursor: pointer; }
.DataTables_sort_icon { display: inline-table; }
.list a { background: none; color: #999; text-decoration: none; }
.list a:hover { color: #333; text-decoration: underline blink; }
#listDanhMuc tr.odd td { background-color: #c4ffc4; }
#listDanhMuc tr.even td { background-color: #d5ffd5; }
</style>
<script>
    $.ajaxSetup({ cache: false });
    var pWidth = "220px";
    $(function () {
        $("#listDanhMuc").dataTable({
            "bJQueryUI": true,
            "bStateSave": true,
            "bAutoWidth": false,
            "iDisplayLength": 1000,
            "aoColumnDefs": [{ "sWidth": pWidth, "aTargets": ["_all"]}],
            "fnDrawCallback": function (oSettings) {
                $(".list a").click(function () {
                    if ($(this).prop("target") != "_blank") {
                        $("html, body").animate({ scrollTop: 0 }, "slow");
                        addTab(this.name, $(this).text(), this.href);
                        return false;
                    }
                });
            }
        }).rowReordering();
        $("#listDanhMuc_length").hide();
        $("#listDanhMuc_filter input").width("190px");
    });
    $(function () {
        $("#accordionResizer").resizable({
            minWidth: 210,
            create: function (event, ui) {
                if ($.cookie("accordionWidth") != undefined) {
                    $(this).css("width", $.cookie("accordionWidth"));
                    $("#accordion").accordion("refresh");
                } else {
                    $(this).css("width", pWidth);
                    $("#accordion").accordion("refresh");
                }
            },
            resize: function (event, ui) {
                $.cookie("accordionWidth", ui.size.width);
                $("#accordion").accordion("refresh");
            }
        });
    });
    $(function () {
        var tabs = $("#tabs").tabs();
        // close icon: removing the tab on click
        tabs.delegate("span.ui-icon-close", "click", function () {
            var panelId = $(this).closest("li").remove().attr("aria-controls");
            $("#" + panelId).remove();
            tabs.tabs("refresh");
        }); /*
        tabs.bind("keyup", function (event) {
            if (event.altKey && event.keyCode === $.ui.keyCode.BACKSPACE) {
                var panelId = tabs.find(".ui-tabs-active").remove().attr("aria-controls");
                $("#" + panelId).remove();
                tabs.tabs("refresh");
            }
        });*/
        tabs.delegate("span.ui-icon-refresh", "click", function () {
            var panelId = $(this).closest("li").attr("aria-controls");
            var elem = $("#" + panelId);
            reload(elem, elem.attr("content"));
        });
    });
    var tabTemplate = "<li><a href='#{href}'>#{label}</a><span class='ui-icon ui-icon-close' role='presentation'>Remove Tab</span><span class='ui-icon ui-icon-refresh' role='presentation'>Refresh Tab</span></li>";
    function select(name) {
        var tabs = $("#tabs");
        var parent = tabs.children(0);
        for (id = 0; id < parent.length; id++)
            if (parent[id].id == "tabs-" + name)
                tabs.tabs("option", "active", id - 1);
    }
    function addevt(elem, content) {
        elem.find("a.dopost").click(function (event) {
            event.preventDefault();
            elem = $(this).closest("[id*='tabs-']");
            content = elem.attr("content");
            if (confirm("Are you sure you want to remove this element?"))
                $.ajax({
                    type: "POST",
                    url: this.href,
                    success: function (data) {
                        if (data.indexOf("OK") == 0)
                            reload(elem, content);
                        else alert(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        addTabError(errorThrown, jqXHR.responseText);
                    }
                });
        });
        elem.find("a.dialog").click(function (event) {
            event.preventDefault();
            elem = $(this).closest("[id*='tabs-']");
            content = elem.attr("content");
            $("#dialog").load(this.href, function (response, status, xhr) {
                $(this).find("input.dialog").click(function (event) {
                    var form = $(this).closest("form");
                    if (form.valid()) {
                        $.ajax({
                            type: "POST",
                            url: form.attr("action"),
                            data: form.serialize(),
                            success: function (data) {
                                if (data.indexOf("OK") == 0) {
                                    $("#dialog").dialog("close");
                                    reload(elem, content);
                                } else alert(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                addTabError(errorThrown, jqXHR.responseText);
                            }
                        });
                        return false;
                    }
                });
            }).dialog({
                modal: true,
                width: "auto",
                position: ["center", 20],
                title: $(this).attr("title"),
                close: function () { $("#dialog").empty(); }
            });
        });
    }
    function reload(elem, content) {
        elem.attr("content", content);
        elem.block({ message: "Loading..." });
        elem.load(content, function (response, status, xhr) {
            elem.html(response);
            elem.unblock();
            addevt(elem, content);
            elem.find("table.dataTable").each(function () {
                $(this).attr("elem", elem);
                $(this).attr("link", content);
                $(this).dataTable().fnSettings().aoDrawCallback.push({
                    "fn": function () {
                        addevt($(this), $(this).attr("link"));
                    }
                });
            });
        });
    }
    function addTab(name, label, content) {
        var tabs = $("#tabs"), id = "tabs-" + name,
        li = $(tabTemplate.replace(/#\{href\}/g, "#" + id).replace(/#\{label\}/g, label));

        var elem = $("#" + id);
        if (elem.length == 0) {
            tabs.find(".ui-tabs-nav").append(li);
            tabs.append("<div id='" + id + "' style='padding:0'></div>");
            tabs.tabs("refresh");
            elem = $("#" + id);
            reload(elem, content);
        }
        select(name);
    }
    function addTabError(label, content) {
        var name = Math.floor(1 / Math.random());
        var tabs = $("#tabs"), id = "tabs-" + name,
        li = $(tabTemplate.replace(/#\{href\}/g, "#" + id).replace(/#\{label\}/g, label));

        tabs.find(".ui-tabs-nav").append(li);
        tabs.append("<div id='" + id + "'></div>");
        tabs.tabs("refresh");
        $("#" + id).html(content);

        select(name);
    }
</script>
}