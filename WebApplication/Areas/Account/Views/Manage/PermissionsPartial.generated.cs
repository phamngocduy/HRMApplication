#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRM.Webpages.Areas.Account.Views.Manage
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 1 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
    using HRM.Webpages.Helpers;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Account/Views/Manage/PermissionsPartial.cshtml")]
    public partial class PermissionsPartial : System.Web.Mvc.WebViewPage<dynamic>
    {
        public PermissionsPartial()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n<table");

WriteLiteral(" align=\"center\"");

WriteLiteral(">\r\n<tr>\r\n<td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" style=\"padding:0\"");

WriteLiteral(">\r\n    <table");

WriteLiteral(" id=\"gridRoles\"");

WriteLiteral("></table>\r\n    <div");

WriteLiteral(" id=\"gridRolesPager\"");

WriteLiteral("></div>\r\n    <div");

WriteLiteral(" align=\"right\"");

WriteLiteral(">\r\n        <button");

WriteLiteral(" id=\"saveAction\"");

WriteLiteral(">Save actions</button>\r\n    </div>\r\n</td>\r\n<td");

WriteLiteral(" valign=\"top\"");

WriteLiteral(" style=\"padding:0\"");

WriteLiteral(">\r\n    <table");

WriteLiteral(" id=\"gridActions\"");

WriteLiteral("></table>\r\n    <div");

WriteLiteral(" id=\"gridActionsPager\"");

WriteLiteral(@"></div>
</td>
</tr>
</table>

<script>
function editFunction(response) {
    if (response.responseText)
        return false;
    else return true;
}
function addFunction(response) {
    var result = editFunction(response);
    if (result) {
        this.lastSel = 1;
        $(""#""+this.id).trigger(""reloadGrid"");
    }
    return result;
}
function errorFunction(rowid, response) {
");

WriteLiteral("    ");

            
            #line 34 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
Write(Html.jqGridError("response.responseText"));

            
            #line default
            #line hidden
WriteLiteral(@"
    $actionsDiv.find(""div.ui-inline-edit,div.ui-inline-del"").show();
}
function loadFunction(data) {
    $(""#""+this.id).setSelection(this.lastSel, true);
    this.lastSel = null;
}
function deleteFunction(response, postdata) {
    return [(response.responseText?false:true), response.responseText];
}
function getSelectedRow(jqgrid) {
    return jqgrid.getRowData(jqgrid.getGridParam(""selrow""));
}

var GridRoles = $(""#gridRoles"");
GridRoles.jqGrid({
    url: """);

            
            #line 50 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
     Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral("/Account/Permission/Roles\",\r\n    editurl: \"");

            
            #line 51 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
         Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral(@"/Account/Permission/EditRole"",
    datatype: ""json"", mtype: ""POST"",
    colNames: [""RoleId"", ""Role name"", ""Summary"", """", """"],
    colModel: [
   	{ name:""RoleId"", hidden:true, search:false, editable:true },
   	{ name:""RoleName"", width:100, search:true, sortable:false, editable:true },
   	{ name:""Summary"", width:80, search:false, sortable:false },
    { name:""Actions"", hidden:true, search:false, editable:true },
    { width:23, search:false, sortable:false, formatter:""actions"", formatoptions: { editbutton:false, delbutton:true,
        delOptions: {
            url: """);

            
            #line 61 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
             Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral("/Account/Permission/EditRole\",\r\n            delData: {\r\n                RoleId: f" +
"unction () { return getSelectedRow(GridRoles)[\"RoleId\"]; },\r\n                Rol" +
"eName: function () { return getSelectedRow(GridRoles)[\"RoleName\"]; }\r\n          " +
"  },\r\n            afterSubmit: deleteFunction\r\n    }}}],\r\n    width: 380,\r\n    h" +
"eight: \"100%\",\r\n    rowNum: 1000,\r\n    rowList: [1000],\r\n    pager: \"#gridRolesP" +
"ager\",\r\n    caption: \"List of all Roles\",\r\n    loadComplete: loadFunction,\r\n    " +
"onSelectRow: function (rowid) {\r\n        this.lastSel = rowid;\r\n        var ids " +
"= getSelectedRow(GridRoles)[\"Actions\"];\r\n        ids = $.trim(ids).split(\",\");\r\n" +
"        var count = GridActions.getGridParam(\"records\");\r\n        GridActions.re" +
"setSelection();\r\n        for (id = 1; id <= count; id++)\r\n            for (i = 0" +
"; i < ids.length; i++)\r\n                if (GridActions.getRowData(id)[\"Id\"] == " +
"ids[i])\r\n                    GridActions.setSelection(id, false);\r\n        $(\"#s" +
"aveAction\").button(\"option\", \"disabled\", true);\r\n}});\r\nGridRoles.jqGrid(\"navGrid" +
"\", \"#gridRolesPager\", { edit: false, add: false, del: false });\r\nGridRoles.jqGri" +
"d(\"inlineNav\", \"#gridRolesPager\", {\r\n    addParams: {\r\n        addRowParams: {\r\n" +
"            keys: true,\r\n            successfunc: addFunction,\r\n            erro" +
"rfunc: errorFunction\r\n        }\r\n    },\r\n    editParams: {\r\n        keys: true,\r" +
"\n        restoreAfterError: true,\r\n        successfunc: editFunction,\r\n        e" +
"rrorfunc: errorFunction\r\n    }\r\n});\r\n\r\nvar Controllers = [\r\n");

            
            #line 105 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
 foreach (var file in new DirectoryInfo(Server.MapPath("~/bin")).EnumerateFiles("HRM.*.dll"))
{
    foreach (var type in System.Reflection.Assembly.LoadFile(file.FullName).GetTypes())
    {
        if (!String.IsNullOrEmpty(type.Namespace) && type.Namespace.EndsWith(".Controllers")
            && !type.Name.StartsWith("<"))
        {
            
            
            #line default
            #line hidden
            
            #line 112 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
       Write(MvcHtmlString.Create(String.Format("\"{0}\",", type.Name)));

            
            #line default
            #line hidden
            
            #line 112 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
                                                                       
        }
    }
}

            
            #line default
            #line hidden
WriteLiteral(@"];
function editController(elem) {
    $(""#""+elem.id).autocomplete({
        source: Controllers, minLength: 0,
    }).on(""focus"", function () {
        $(this).autocomplete(""search"", '');
    });
    $("".ui-autocomplete"").css(""fontSize"", ""0.9em"");
}

var GridActions = $(""#gridActions"");
GridActions.jqGrid({
    url: """);

            
            #line 128 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
     Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral("/Account/Permission/Actions\",\r\n    editurl: \"");

            
            #line 129 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
         Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral(@"/Account/Permission/EditAction"",
    datatype: ""json"", mtype: ""POST"",
    colNames: [""Id"", ""Controller"", ""Action"", """"],
    colModel: [
   	{ name:""Id"", hidden:true, search:false, editable:true },
   	{ name:""Controller"", width:90, search:true, sortable:false, editable:true, editoptions:{dataInit:editController} },
   	{ name:""Action"", width:110, search:false, sortable:false, editable:true, edittype:""custom"",
        editoptions: {
            custom_element: function (value, options) {
                var span = document.createElement(""span"");
                var id = $(""#"" + options.id.split(""_"")[0] + ""_Id"").val();
                $(""<a href='");

            
            #line 140 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
                       Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral(@"/Account/Permission/EditActions/"" + id + ""' target='_blank' style='display:inline-block'><span class='ui-icon ui-icon-pencil'/></a>"").appendTo($(span));
                var text = document.createElement(""input"");
                text.type=""text"";
                text.value = value;
                span.appendChild(text);
                return span;
            },
            custom_value: function (elem, operation, value) {
                if(operation === 'get') {
                   return $('input', elem).val();
                } else if(operation === 'set') {
                   $('input', elem).val(value);
                }
            }
        } },
    { width:23, search:false, sortable:false, formatter:""actions"", formatoptions: { editbutton:false, delbutton:true,
        delOptions: {
            url: """);

            
            #line 157 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
             Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral("/Account/Permission/EditAction\",\r\n            onclickSubmit: function (params, po" +
"sdata) {\r\n                return {\r\n                    Id: function () { return" +
" GridActions.getRowData(posdata)[\"Id\"]; },\r\n                    Action: function" +
"() { return getSelectedRow(GridActions)[\"Action\"]; },\r\n                    Contr" +
"oller: function() { return getSelectedRow(GridActions)[\"Controller\"]; }\r\n       " +
"         };\r\n            },\r\n            afterSubmit: function (response, postda" +
"ta) {\r\n                if (!response.responseText) GridRoles.trigger(\"reloadGrid" +
"\");\r\n                return deleteFunction(response, postdata);\r\n            }\r\n" +
"    }}}],\r\n    width: 400,\r\n    height: \"100%\",\r\n    rowNum: 1000,\r\n    rowList:" +
" [1000],\r\n    scrollrows: true,\r\n    multiselect: true,\r\n    pager: \"#gridAction" +
"sPager\",\r\n    caption: \"List of all Actions\",\r\n    onSelectRow: function (rowid)" +
" {\r\n        $(\"#saveAction\").button(\"option\", \"disabled\", GridRoles.getGridParam" +
"(\"selrow\")<1);\r\n    }\r\n});\r\nGridActions.jqGrid(\"navGrid\", \"#gridActionsPager\", {" +
" edit: false, add: false, del: false });\r\nGridActions.jqGrid(\"inlineNav\", \"#grid" +
"ActionsPager\", {\r\n    addParams: {\r\n        addRowParams: {\r\n            keys: t" +
"rue,\r\n            successfunc: addFunction,\r\n            errorfunc: errorFunctio" +
"n\r\n        }\r\n    },\r\n    editParams: {\r\n        keys: true,\r\n        restoreAft" +
"erError: true,\r\n        successfunc: addFunction,\r\n        errorfunc: errorFunct" +
"ion\r\n    }\r\n});\r\n\r\n$(\"#gridRolesPager_right\").hide();\r\n$(\"#gridActionsPager_righ" +
"t\").hide();\r\n$(\"input#cb_gridActions.cbox\").hide();\r\n$(\"#saveAction\").button()\r\n" +
"    .button(\"option\", \"disabled\", true)\r\n    .click(function (event) {\r\n        " +
"event.preventDefault();\r\n        var form = $(\"<form>\");\r\n        form.append($(" +
"\"<input>\", { name: \"roleId\", value: getSelectedRow(GridRoles)[\"RoleId\"], type: \"" +
"hidden\" }));\r\n        var actions = GridActions.getGridParam(\"selarrrow\");\r\n    " +
"    if (actions != null)\r\n            for (i = 0; i < actions.length; i++)\r\n    " +
"            form.append($(\"<input>\", { name: \"actionIds\", value: GridActions.get" +
"RowData(actions[i])[\"Id\"], type: \"textbox\" }));\r\n        $(\"body\").block();\r\n   " +
"     $.ajax({\r\n            url: \"");

            
            #line 214 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
             Write(HttpRuntime.AppDomainAppVirtualPath);

            
            #line default
            #line hidden
WriteLiteral("/Account/Permission/SaveAction\", type: \"POST\",\r\n            data: form.serialize(" +
"),\r\n            success: function (response) {\r\n                if (response)\r\n");

WriteLiteral("                    ");

            
            #line 218 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
               Write(Html.jqGridError("response"));

            
            #line default
            #line hidden
WriteLiteral("\r\n                GridRoles.trigger(\"reloadGrid\");\r\n                $(\"#saveActio" +
"n\").button(\"option\", \"disabled\", true);\r\n                $(\"body\").unblock();\r\n " +
"           },\r\n            error: function (response) {\r\n");

WriteLiteral("                ");

            
            #line 224 "..\..\Areas\Account\Views\Manage\PermissionsPartial.cshtml"
           Write(Html.jqGridError("response.responseText"));

            
            #line default
            #line hidden
WriteLiteral(";\r\n                $(\"body\").unblock();\r\n            }\r\n        });\r\n    });\r\n</s" +
"cript>\r\n");

        }
    }
}
#pragma warning restore 1591
